vvz/*
 * Copyright (c) 2021-23 purple-rw
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/backlight.h>

#define BASE  0     // alphas (Colemak-DH)
#define QWRTY 1     // alphas (Qwerty)
#define HNSDN 2     // alphas (Hands Down Neu 30)
#define SEMMK 3     // alphas (Semimak JQ)
#define RAISE 4     // symbols & numbers
#define SYMBL 5     // symbols
#define LOWER 6     // functions & navigation
#define KEYPD 7     // functions2 & keypad
#define MODS  8     // modifiers & multimedia
#define ADJST 9     // lighting & bluetooth

// Special keys
#define ZOOMOUT      LA(LG(MINUS))
#define ZOOMIN       LA(LG(EQUAL))
#define M_UNDO       LG(Z)
#define M_CUT        LG(X)
#define M_COPY       LG(C)
#define M_PASTE      LG(V)
#define M_SELALL     LG(A)
#define M_TMUX       LC(T)
#define NON_US_TILDE LS(NON_US_HASH)
#define NON_US_PIPE  LS(NON_US_BSLH)

&lt {
    tapping-term-ms = <200>;
    quick_tap_ms = <200>;
    flavor = "balanced";
};

&sk {
    release-after-ms = <3000>;
};

&caps_word {
    continue-list = <UNDERSCORE BACKSPACE DELETE MINUS DOT>;
};


    keymap {
        compatible = "zmk,keymap";

        default_layer {
// Qwerty
// -------------------------------------------------------------
// |  Q  |  W  |  E  |  R  |  T  |  Y  |  U  |  I  |  O  |  P  |
// |  A  |  S  |  D  |  F  |  G  |  H  |  J  |  K  |  L  |  ;  |
// |  Z  |  X  |  C  |  V  |LSft |Space|  M  |  ,  |  .  |  /  |
// -------------------------------------------------------------
            bindings = < 
    &kp Q       &kp W       &kp E       &kp R       &kp T         &kp Y           &kp U       &kp I       &kp O       &kp P
    &kp A       &kp S       &kp D       &kp F       &kp G         &kp H           &kp J       &kp K       &kp L       &kp SEMI
    &kp Z       &kp X       &kp C       &lt LOWER V &kp LSFT      &kp SPACE       &lt RAISE M &kp COMMA   &kp DOT     &kp FSLH
            >;
        };
    };
};
